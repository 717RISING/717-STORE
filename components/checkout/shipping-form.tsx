'use client'

import { useState } from "react"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Checkbox } from "@/components/ui/checkbox"
import { ShippingAddress } from "@/lib/types" // Import the ShippingAddress type

interface ShippingFormProps {
  onSubmit: (data: ShippingAddress) => void;
  initialData?: ShippingAddress;
}

export function ShippingForm({ onSubmit, initialData }: ShippingFormProps) {
  const [formData, setFormData] = useState<ShippingAddress>(initialData || {
    id: '', // ID will be generated by DB, but needed for type
    userId: '', // Will be filled by auth context
    name: '',
    address1: '',
    address2: '',
    city: '',
    state: '',
    zip: '',
    country: '',
    isDefault: false,
  })
  const [saveAddress, setSaveAddress] = useState(false)

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { id, value } = e.target
    setFormData(prev => ({ ...prev, [id]: value }))
  }

  const handleSelectChange = (id: keyof ShippingAddress, value: string) => {
    setFormData(prev => ({ ...prev, [id]: value }))
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    onSubmit(formData)
  }

  return (
    <form onSubmit={handleSubmit} className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div className="space-y-2">
          <Label htmlFor="name">Nombre Completo</Label>
          <Input id="name" placeholder="John Doe" value={formData.name} onChange={handleChange} required />
        </div>
        <div className="space-y-2">
          <Label htmlFor="address1">Dirección 1</Label>
          <Input id="address1" placeholder="123 Main St" value={formData.address1} onChange={handleChange} required />
        </div>
        <div className="space-y-2">
          <Label htmlFor="address2">Dirección 2 (Opcional)</Label>
          <Input id="address2" placeholder="Apt 4B" value={formData.address2 || ''} onChange={handleChange} />
        </div>
        <div className="space-y-2">
          <Label htmlFor="city">Ciudad</Label>
          <Input id="city" placeholder="Anytown" value={formData.city} onChange={handleChange} required />
        </div>
        <div className="space-y-2">
          <Label htmlFor="state">Estado/Provincia</Label>
          <Input id="state" placeholder="CA" value={formData.state} onChange={handleChange} required />
        </div>
        <div className="space-y-2">
          <Label htmlFor="zip">Código Postal</Label>
          <Input id="zip" placeholder="90210" value={formData.zip} onChange={handleChange} required />
        </div>
        <div className="space-y-2">
          <Label htmlFor="country">País</Label>
          <Select value={formData.country} onValueChange={(value) => handleSelectChange('country', value)}>
            <SelectTrigger id="country">
              <SelectValue placeholder="Selecciona un país" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="USA">Estados Unidos</SelectItem>
              <SelectItem value="CAN">Canadá</SelectItem>
              <SelectItem value="MEX">México</SelectItem>
              <SelectItem value="COL">Colombia</SelectItem>
              {/* Add more countries as needed */}
            </SelectContent>
          </Select>
        </div>
      </div>
      <div className="flex items-center space-x-2">
        <Checkbox id="saveAddress" checked={saveAddress} onCheckedChange={(checked) => setSaveAddress(!!checked)} />
        <Label htmlFor="saveAddress">Guardar esta dirección para futuras compras</Label>
      </div>
      <Button type="submit" className="w-full">Continuar con el Pago</Button>
    </form>
  )
}
